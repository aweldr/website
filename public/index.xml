<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Barlowe Analytics</title>
    <link>https://barloweanalytics.com/</link>
    <description>Recent content on Barlowe Analytics</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>2019 Barlowe Analytics</copyright>
    <lastBuildDate>Fri, 13 Mar 2020 01:39:30 -0400</lastBuildDate>
    
	<atom:link href="https://barloweanalytics.com/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>IDEs of March</title>
      <link>https://barloweanalytics.com/posts/ides-of-march/</link>
      <pubDate>Fri, 13 Mar 2020 01:39:30 -0400</pubDate>
      
      <guid>https://barloweanalytics.com/posts/ides-of-march/</guid>
      <description>IDEs of March There are many articles about learning to code and mention where to learn or how to learn etc. Very few however mention where you are going to write the code once you learn it! Most beginner stuff have you working at that programming language&amp;rsquo;s terminal, which is great for getting the basics but you&amp;rsquo;ll quickly grow past that. So where does one actually write their source code?</description>
    </item>
    
    <item>
      <title>So You Want to Learn to Code</title>
      <link>https://barloweanalytics.com/posts/learning_to_code/</link>
      <pubDate>Thu, 12 Mar 2020 22:52:24 -0400</pubDate>
      
      <guid>https://barloweanalytics.com/posts/learning_to_code/</guid>
      <description>So You Want to Learn to Code I&amp;rsquo;ve been getting a lot of inquiries recently asking a lot of similar quesitions. Often these questions are broad and hard to answer in an email or a DM, so I&amp;rsquo;ve decided to use my free time no longer taken up by watching sports to write a series of blog posts to answer them as best I can.
One of the big ones I keep seeing over and over again is &amp;ldquo;What are the best resources to learn to code?</description>
    </item>
    
    <item>
      <title>Probability and Statistics: Chapter 1</title>
      <link>https://barloweanalytics.com/posts/degrootchapter1/</link>
      <pubDate>Sun, 10 Nov 2019 15:34:22 -0500</pubDate>
      
      <guid>https://barloweanalytics.com/posts/degrootchapter1/</guid>
      <description>Ok this is going to be a series of blog posts about detaling my notes and thoughts as I work through DeGroot and Schervish&amp;rsquo;s Probability and Statistics 4th Edition. This may be useful to you it may not be but I generally find I learn things better if I write down what I&amp;rsquo;m thinking about them so without further ado, let&amp;rsquo;s begin!
The History of Probability So apparently people have been gambling forever.</description>
    </item>
    
    <item>
      <title>Joins</title>
      <link>https://barloweanalytics.com/sql/joins/</link>
      <pubDate>Fri, 24 May 2019 23:46:03 -0400</pubDate>
      
      <guid>https://barloweanalytics.com/sql/joins/</guid>
      <description>Ok now that you have the database up and can now do some basic queries from the [last tutorial]((https://barloweanalytics.com/sql/sqlbasics/) you are probably wondering how do you actually tell which players are achieveing which stats. In the few tables we looked at there are no actual player names, only what&amp;rsquo;s called playerid which looks like a weird combination of a name and a number. Some aren&amp;rsquo;t even full names either way it doesn&amp;rsquo;t really tell you who is doing what in the database.</description>
    </item>
    
    <item>
      <title>Creating a New Postgres User</title>
      <link>https://barloweanalytics.com/sql/createuser/</link>
      <pubDate>Fri, 24 May 2019 21:33:42 -0400</pubDate>
      
      <guid>https://barloweanalytics.com/sql/createuser/</guid>
      <description>Ok so if you&#39;ve come to this point you now have your database up and running and you want to allow others to access it. Some people say it&#39;s not the brightest idea, but hey, this data ain&#39;t going to share itself. Obviously letting them use your account is out of the question because as a superuser that will just allow them to wreak havoc any time they want on your meticulously gathered data.</description>
    </item>
    
    <item>
      <title>Postgres Remote Login</title>
      <link>https://barloweanalytics.com/sql/login/</link>
      <pubDate>Thu, 23 May 2019 22:25:11 -0400</pubDate>
      
      <guid>https://barloweanalytics.com/sql/login/</guid>
      <description>Remote Postgres Login 
Ok if you&amp;rsquo;ve been following along with the other tutorials you have seen me use the psql command to login into your database that you&amp;rsquo;ve setup on your computer. But that&amp;rsquo;s not all psql is use for, and in fact it has many diverse properties that you can use to pass SQL queries to the database without ever logging into the server itself. But I won&amp;rsquo;t get into that with this tutorial, instead I&amp;rsquo;m going to focus on using psql to login into a remote Postgres server</description>
    </item>
    
    <item>
      <title>SQL Basics</title>
      <link>https://barloweanalytics.com/posts/sqlbasics/</link>
      <pubDate>Wed, 22 May 2019 22:16:36 -0400</pubDate>
      
      <guid>https://barloweanalytics.com/posts/sqlbasics/</guid>
      <description>Ok if you&amp;rsquo;ve read the first tutorial on installing Postgres and getting your first database up and running, you&amp;rsquo;re now wondering &amp;ldquo;So how do I access all this data?&amp;rdquo; Well that&amp;rsquo;s where this tutorial comes in as we are going to cover some of the basic commands in SQL to get the data we want. Ok let&amp;rsquo;s get started and dive right in to our data.
SELECT The SELECT command is going to be your workhorse command when working with SQL.</description>
    </item>
    
    <item>
      <title>SQL Basics</title>
      <link>https://barloweanalytics.com/sql/sqlbasics/</link>
      <pubDate>Wed, 22 May 2019 22:16:36 -0400</pubDate>
      
      <guid>https://barloweanalytics.com/sql/sqlbasics/</guid>
      <description>Ok if you&amp;rsquo;ve read the first tutorial on installing Postgres and getting your first database up and running, you&amp;rsquo;re now wondering &amp;ldquo;So how do I access all this data?&amp;rdquo; Well that&amp;rsquo;s where this tutorial comes in as we are going to cover some of the basic commands in SQL to get the data we want. Ok let&amp;rsquo;s get started and dive right in to our data.
SELECT The SELECT command is going to be your workhorse command when working with SQL.</description>
    </item>
    
    <item>
      <title>Using Travis CI and Codecov with your Python Project</title>
      <link>https://barloweanalytics.com/posts/travis/</link>
      <pubDate>Mon, 20 May 2019 00:22:29 -0400</pubDate>
      
      <guid>https://barloweanalytics.com/posts/travis/</guid>
      <description>by Matthew Barlowe I&amp;rsquo;m going to cover two important concepts when it comes to coding: Continuous Integration and Code Coverage. Continuous Integration is the act of merging everyones code into the main code repository several times a day instead of doing it once a day or every few days.
There are pros and cons to this behavior which is beyond the scope of the article, but I like Continuous Integration (CI) because it fits in with my own coding philosophy.</description>
    </item>
    
    <item>
      <title>Projects</title>
      <link>https://barloweanalytics.com/projects/</link>
      <pubDate>Sat, 04 May 2019 14:27:59 -0400</pubDate>
      
      <guid>https://barloweanalytics.com/projects/</guid>
      <description>Projects This is a list of all current/past projects I am working on.
nba_scraper This is a python package for scraping the NBA&amp;rsquo;s api and returning a play by play file or pandas dataframe.
PyPi page
Source code
jAvantage This is a java API wrapper for the Alpha Vantage API. Is currently still in construciton but a succesful Jar can be built from the source code
Source code</description>
    </item>
    
    <item>
      <title>Install</title>
      <link>https://barloweanalytics.com/sql/install/</link>
      <pubDate>Thu, 18 Apr 2019 23:38:39 -0400</pubDate>
      
      <guid>https://barloweanalytics.com/sql/install/</guid>
      <description>by Matthew Barlowe  This tutorial will cover the basics of getting PostgreSQL setup on your computer and running. We won&amp;rsquo;t actually be working with data in this article, but instead the focus is on the nuts and bolts of what PostgreSQL is and and its structure. But before I get into all that let&amp;rsquo;s start at the beginning. As always these tutorials will be focused on working in a Mac OS X environment.</description>
    </item>
    
    <item>
      <title>Loops</title>
      <link>https://barloweanalytics.com/java/loops/</link>
      <pubDate>Thu, 18 Apr 2019 19:07:08 -0400</pubDate>
      
      <guid>https://barloweanalytics.com/java/loops/</guid>
      <description>by Matthew Barlowe Remember all these code snippets must be wrapped in a class method or a public static void main to actually run. For the idea/philosophy behind loops and how to use them go here
for loops for (initialization; termination; increment){ statement(s); }  Real world example:
//++ operator increments the value by one for (int i=1; i&amp;lt;11; i++) { System.out.println(&amp;quot;Your number is: &amp;quot; + i); }  Infinite loop can be created this way:</description>
    </item>
    
    <item>
      <title>Functions</title>
      <link>https://barloweanalytics.com/r/functions/</link>
      <pubDate>Thu, 18 Apr 2019 17:19:29 -0400</pubDate>
      
      <guid>https://barloweanalytics.com/r/functions/</guid>
      <description>#by Matthew Barlowe
This is the syntax for making a function in R:
function.name &amp;lt;- function(arg1, arg2, arg3=2) { variable = arg1 + arg2 print(arg3) variable # the last line of the function is the return value in R }  In R you can also pass an ... argument to a function indicating that the funciton can take any number of name or unnamed arguments as well in the function parameters.</description>
    </item>
    
    <item>
      <title>Hello World</title>
      <link>https://barloweanalytics.com/java/helloworld/</link>
      <pubDate>Wed, 17 Apr 2019 23:22:23 -0400</pubDate>
      
      <guid>https://barloweanalytics.com/java/helloworld/</guid>
      <description>Ok Java is a little different than R or Python in that in order to run any code you have to first create a class object. I haven&amp;rsquo;t yet written a tutorial on classes and inheritence which form the basis of Object Oriented Programming.
If you&amp;rsquo;re trying to learn Java coming from Python or R this fact will be very disorienting as you can&amp;rsquo;t can&amp;rsquo;t just type some lines and run them at the command line.</description>
    </item>
    
    <item>
      <title>Hello World</title>
      <link>https://barloweanalytics.com/r/helloworld/</link>
      <pubDate>Wed, 17 Apr 2019 23:12:25 -0400</pubDate>
      
      <guid>https://barloweanalytics.com/r/helloworld/</guid>
      <description> by Matthew Barlowe Some simple Hello World code.
print(&amp;quot;Hello World!&amp;quot;) print(&amp;quot;Hello World!&amp;quot;, quote=FALSE) print(paste(&amp;quot;Hello&amp;quot;, &amp;quot;World!&amp;quot;))  produces this output:
&amp;quot;Hello World!&amp;quot; Hello World! &amp;quot;Hello World!&amp;quot;  </description>
    </item>
    
    <item>
      <title>Loops</title>
      <link>https://barloweanalytics.com/r/loops/</link>
      <pubDate>Wed, 17 Apr 2019 20:51:38 -0400</pubDate>
      
      <guid>https://barloweanalytics.com/r/loops/</guid>
      <description>by Matthew Barlowe This is a tutorial going over the syntax of loops in R. If you want a break down of how loops work and the philosophy please read my Python loop tutorial. Loops should be a last resort in R as they are slow and inefficient. Often you can do what you need to in loops using the apply family of functions or the purrr package.
for loops for (i in 1:10) { print(paste(&amp;quot;Your number is&amp;quot;, i)) } some_numbers &amp;lt;- c(1,3,5,3,0,10,35) for (i in some_numbers) { print(paste(&amp;quot;Your number is&amp;quot;, i)) }  while loops answer &amp;lt;- readline(prompt=&amp;quot;What&#39;s the best part about Matt?</description>
    </item>
    
    <item>
      <title>Functions</title>
      <link>https://barloweanalytics.com/python/functions/</link>
      <pubDate>Wed, 17 Apr 2019 20:51:24 -0400</pubDate>
      
      <guid>https://barloweanalytics.com/python/functions/</guid>
      <description>by Matthew Barlowe What is a function? Basically &amp;ldquo;a function is a block of code which only runs when it is called.&amp;rdquo; But what does that mean? It means that you have set aside a set of code inside your overall program that won&amp;rsquo;t run unless you specifically tell the computer that you want to run it. Still doesn&amp;rsquo;t make sense? Let&amp;rsquo;s look at it in action. Create a file let&amp;rsquo;s call it test.</description>
    </item>
    
    <item>
      <title>Loops</title>
      <link>https://barloweanalytics.com/python/loops/</link>
      <pubDate>Tue, 16 Apr 2019 17:53:57 -0400</pubDate>
      
      <guid>https://barloweanalytics.com/python/loops/</guid>
      <description>by Matthew Barlowe Loops are an important part of programming in any language. So in this tutorial we are going to go over what they do and how to implement them.
In Python there are two typs of loops: the for loop and the while loop. But before we get into the distinction of the two lets talk about why you want to use loops in your programming.
Why loops?</description>
    </item>
    
    <item>
      <title>Python Hello World</title>
      <link>https://barloweanalytics.com/python/helloworld/</link>
      <pubDate>Mon, 15 Apr 2019 20:24:18 -0400</pubDate>
      
      <guid>https://barloweanalytics.com/python/helloworld/</guid>
      <description>by Matthew Barlowe &amp;ldquo;Hello World&amp;rdquo; is a very common first program for just about any programming langauge. I&amp;rsquo;m sure there&amp;rsquo;s some history behind it, but I&amp;rsquo;ve never bothered to look it up. Usually it&amp;rsquo;s just a simple program of very limited lines that prints out the phrase &amp;ldquo;Hello World.&amp;rdquo; The purpose of this tutorial is to get you setup to write that first program.
Getting Started The first thing to do is open your favorite text editor.</description>
    </item>
    
    <item>
      <title>Installing Python</title>
      <link>https://barloweanalytics.com/python/pythoninstall/</link>
      <pubDate>Mon, 15 Apr 2019 19:25:14 -0400</pubDate>
      
      <guid>https://barloweanalytics.com/python/pythoninstall/</guid>
      <description>by Matthew Barlowe Ok so if you&amp;rsquo;ve read the Homebrew Tutorial you are ready to actually start using it to start programming in python. If you haven&amp;rsquo;t read that tutorial and you want to follow this one I sugestt going back and reading that one first. First though we need to get your system properly setup to run python safely and avoid problems in the future. The first step to doing that is to install Apple&amp;rsquo;s Xcode utilities, specifically GCC.</description>
    </item>
    
    <item>
      <title>Homebrew Install</title>
      <link>https://barloweanalytics.com/unix/homebrew/</link>
      <pubDate>Mon, 15 Apr 2019 18:38:25 -0400</pubDate>
      
      <guid>https://barloweanalytics.com/unix/homebrew/</guid>
      <description>by Matthew Barlowe Homebrew is a very usefual package manager that can be installed on the macOS system. It&amp;rsquo;s what I use to manage by Python installations along with my SQL database as well. It has a nice, easy to learn, syntax and is simple to install from the terminal on an Apple computer. What is a package manager you ask? Well join me in the next section and we&amp;rsquo;ll discuss the details behind it.</description>
    </item>
    
    <item>
      <title>Git2</title>
      <link>https://barloweanalytics.com/git/git2/</link>
      <pubDate>Mon, 15 Apr 2019 01:57:19 -0400</pubDate>
      
      <guid>https://barloweanalytics.com/git/git2/</guid>
      <description> This is a test </description>
    </item>
    
    <item>
      <title>Introduction to Git and Github</title>
      <link>https://barloweanalytics.com/git/gitintro/</link>
      <pubDate>Sun, 14 Apr 2019 17:30:40 -0400</pubDate>
      
      <guid>https://barloweanalytics.com/git/gitintro/</guid>
      <description>by Matthew Barlowe So if you&amp;rsquo;ve started out doing a little coding either for fun or like me to try and do data analysis of the NHL, then you&amp;rsquo;ve probably heard people talk a lot about Git and Github. And if you were like me, you&amp;rsquo;ve even tried to learn it, or use it, but just got so frustrated you gave up and figured it wasn&amp;rsquo;t worth the time.</description>
    </item>
    
    <item>
      <title>My Work</title>
      <link>https://barloweanalytics.com/work/</link>
      <pubDate>Sat, 13 Apr 2019 22:46:09 -0400</pubDate>
      
      <guid>https://barloweanalytics.com/work/</guid>
      <description>Rpubs Here&amp;rsquo;s some of the Data Analysis I&amp;rsquo;ve done in R. I don&amp;rsquo;t use R as much as I used to but I still love doing simple data exploration/graphing in it.
Github A lot of my public work had to be taken down as it dealt with NHL analytics. I&amp;rsquo;ve branched out into other things such as NBA analysis and fintech in the public sphere these days.
LinkedIn Standard LinkedIn stuff including some of the presentations I&amp;rsquo;ve done in the past on hockey analytics</description>
    </item>
    
    <item>
      <title>Tutorials</title>
      <link>https://barloweanalytics.com/tutorials/</link>
      <pubDate>Sat, 13 Apr 2019 22:24:45 -0400</pubDate>
      
      <guid>https://barloweanalytics.com/tutorials/</guid>
      <description>This will be a site hosting tutorials for various subjects in Data Science written from the perspective of working in a Mac OS X environment.
Python  Installation  Installing Python
 
  
 Basics  Hello World
Functions
 Loops
  
  R  Basics  Hello World
Functions
 Loops
    Java  Basics  Hello World
 Loops</description>
    </item>
    
    <item>
      <title>About Me</title>
      <link>https://barloweanalytics.com/about/aboutme/</link>
      <pubDate>Sat, 13 Apr 2019 21:58:17 -0400</pubDate>
      
      <guid>https://barloweanalytics.com/about/aboutme/</guid>
      <description>I am a SQL Developer and Stats Analyst for the National Hockey League
This site is built using Hugo static site generator. Site theme is terminal by panr. Site is hosted on AWS S3 Buckets using AWS Cloudfront to serve SSL certificates and AWS Lambda to clean the urls. Source code for site can be found here.</description>
    </item>
    
    <item>
      <title>We&#39;re Back!</title>
      <link>https://barloweanalytics.com/posts/my-first-post/</link>
      <pubDate>Sat, 13 Apr 2019 21:36:40 -0400</pubDate>
      
      <guid>https://barloweanalytics.com/posts/my-first-post/</guid>
      <description>The Rebuild Has Begun Due to a lot (well a few) people asking me about my tutorials I&amp;rsquo;ve decided to bring them back. And It gives me a chance to revamp the old website with a little slicker format. So stay tuned as I slowly work to get things back in the shape they were before. As always you can address any concerns, questions, or requests to matt@barloweanaltyics.com.</description>
    </item>
    
  </channel>
</rss>